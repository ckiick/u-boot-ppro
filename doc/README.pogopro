
[By Chris Kiick <chris@kiick.net>, 6 DEC 2012]

Support for pogoplug pro and other pogoplugs that use the oxnas 820 board
is included in the oxnas820 board and related files.  To configure uboot for
pogoplug pro, use the oxnas820_config target.  This probably will NOT work
for non pogoplug oxnas devices such as MedionNas.  It has only been tested on
the pogoplug pro, but it should work with other oxnas pogoplugs.

Pogoplug pro has a weird NAND setup.  It uses a custom Reed-Solomon ECC
for the environment block and uboot itself, but does not use any ECC for the
kernel images (or anything else).  The nand_base code had to be modified
slighlty to allow the use of custom software ECC with the nand platform driver
and nand base implementation.
In order to allow nand read/write of either kernel images or uboot images,
a new nand command "nand ecc [on|off]" was added.  It is configured with
CONFIG_CMD_NAND_ECC.  Without the on/off argument, it reports the current
status, otherwise it turns NAND ECC checking on or off.  This effects
nand reads and writes, including nboot.  The default setting is normally
"on", but can be set in the PLAT_NAND_INIT function.
Since the environment block always uses ECC, a separate config option
CONFIG_SYS_NAND_ENV_ECC_ON was added. If this is defined, then ECC always
will be used for reading/writing the environment in NAND, regardless of what
was set with nand ecc on/off.  Note that the environment can still be read
without ECC by using the nand read command with ecc turned off.

The oxnas boards have a dual-core ARM 11 MPC (multi processing core) CPU.
This is very similar to the arm1136 cpu, except that it has SMP support.
Uboot only uses 1 core, and does not even initialize or reference the
second core.  There are some quirks with start.S that make it different
from the arm1136.

The stage1 bootloader reads uboot from NAND and places it at a fixed location
in RAM.  This location is hard defined at compile time for stage1, and
corresponds to CONFIG_SYS_TEXT_BASE in uboot.  For NAND, the location is
0x60d00000.  It is not necessary for uboot to relocate itself, although it
can if it is able. (So far relocation does not work.)  Even if the oxnas
uboot does not relocate, it is NOT compiled as SPL.

NB:	Position independent executables aren't.

The pogoplug pro PROM code supports booting from SATA.  To boot from SATA
a disk must be configured as MBR with a stage1 bootloader as well as uboot,
the kernel and the root fs. To compile uboot for SATA boot, OXNAS_USE_SATA
and OXNAS_USE_SATA_ENV must be defined (undefine OXNAS_USE_NAND_ENV). It was
necessary to port code supporting CONFIG_ENV_IS_IN_DISK in order to work with
the on-disk environment blocks.

Note: original uboot 1.1.2 code for the pogoplug pro was published by
Cloudengines, Inc, and released under GPL.  While this original code was the
basis for the pogoplug pro port of u-boot 2012.07, the code was heavily
modified.
http://download.pogoplug.com/opensource/#PRO

High-level Changelog (u-boot-2012.07 base X u-boot-1.1.2 mod pogopro):
boards.cfg mod add oxnas820
add arch/arm/cpu/arm11mpc/*
add board/oxnas820/*
add include/configs/oxnas820.h
copied arch/arm/include/asm/arch-oxnas820/regs.h
arch/arm/include/asm/mach_types.h mod add MACH_TYPE_OXNAS820
arch/arm/lib/board.c mod include status_led.h ifdef CONFIG_STATUS_LED 
add common/env_disk.c
common/Makefile mod add env_disk.o if CONFIG_ENV_IS_IN_DISK=y
common/env_nvedit.c mod add test for CONFIG_ENV_IS_IN_DISK
common/env_nand.c mod add nand_ecc_off extern check for doing ecc or not
common/cmd_nand.c mod add nand ecc command CONFIG_CMD_NAND_ECC
common/cmd_sata.c mod add sataboot command
include/sata.h mod fix sata_read/sata_write prototypes
drivers/mtd/nand/nand_base.c mod add nand_ecc_off global and checks
			mod allow board_nand_init to set some ecc members.
drivers/mtd/nand/nand_plat.c mod pass nand ptr to NAND_PLAT_INIT
include/configs/qong.h mod add nand param to NAND_PLAT_INIT
add doc/README.pogoplug

